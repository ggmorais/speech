{"version":3,"sources":["components/Models/style/Input.module.scss","components/Models/style/Button.module.scss","components/Models/style/Layer.module.scss","components/scss_modules/labels.module.scss","components/Chat/chat.module.scss","components/Chat/components/RoomWindow/window.module.scss","components/Chat/components/Logoff/logoff.module.scss","components/Chat/components/Login/login.module.scss","components/Models/style/Loading.module.scss","components/Models/style/Warning.module.scss","components/Chat/components/NewRoom/newroom.module.scss","components/Chat/components/EnterRoom/enter.module.scss","app.module.scss","components/Models/style/Message.module.scss","components/Chat/components/RoomList/list.module.scss","components/Models/style/NewMessage.module.scss","components/Chat/components/RoomList/list.view.js","config.js","contexts/ChatProvider.js","components/Models/models.view.js","components/dateParser.js","components/Chat/components/RoomList/list.controller.js","components/Chat/components/RoomList/index.js","components/Chat/components/RoomWindow/window.controller.js","components/Chat/components/RoomWindow/index.js","components/Chat/components/Logoff/logoff.view.js","components/Chat/components/Logoff/logoff.controller.js","components/Chat/components/Logoff/index.js","components/Chat/components/NewRoom/newroom.view.js","components/Chat/components/NewRoom/newroom.controller.js","components/Chat/components/NewRoom/index.js","components/Chat/components/EnterRoom/enter.view.js","components/Chat/components/EnterRoom/enter.controller.js","components/Chat/components/EnterRoom/index.js","components/Chat/chat.view.js","components/Chat/components/Login/login.view.js","components/Chat/components/Login/login.controller.js","components/Chat/components/Login/index.js","components/hashRoute.js","components/Chat/chat.controller.js","components/isTokenValid.js","components/Chat/index.js","App.js","index.js"],"names":["module","exports","View","props","className","style","container","onClick","handleSelect","bind","_id","roomName","name","lastMessage","sender","postDate","ChatContext","createContext","ChatProvider","token","localStorage","getItem","user","jwtDecode","useState","rooms","setRooms","selectedRoom","setSelectedRoom","useEffect","a","async","fetch","config","headers","authorization","data","json","response","length","fetchRooms","Provider","value","updateRoom","roomId","body","copy","i","messages","push","Date","now","selectRoom","setItem","children","Input","input","label","inputName","title","borderRadius","rounded","width","type","onChange","Button","button","cancel","done","Layer","layer","cover","display","show","content","padding","pd","NewMessage","newMessage","flex","Message","message","messageInfos","justifyContent","right","messageOwner","username","messageBody","Loading","loading","height","size","use","hide","marginTop","top","marginLeft","left","marginRight","marginBottom","bottom","Warning","warning","date","t","getHours","getMinutes","Controller","useContext","id","map","room","slice","console","log","key","dateParser","RoomList","React","setMessage","window","msg","e","target","method","JSON","stringify","userId","RoomWindow","handleButton","preventDefault","Logoff","handleLayer","handleChanges","buttons","handleSubmit","setLayer","setRoomName","status","NewRoom","setRoomId","alert","EnterRoom","blockLeft","labels","form","onSubmit","changes","password","setChanges","login","Login","hashRoute","url","location","hash","includes","parts","substr","split","showLogin","setShowLogin","route","valide","isTokenValid","then","r","removeItem","JwtDecode","enter","host","replace","invitedToRoom","Chat","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b3978018.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Input_label__3AyPt\",\"inputName\":\"Input_inputName__3yOlU\",\"input\":\"Input_input__2KyBj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__KwHpc\",\"done\":\"Button_done__Kqm8x\",\"cancel\":\"Button_cancel__3vr-R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"Layer_cover__3oMgi\",\"content\":\"Layer_content__2Z31y\",\"container\":\"Layer_container__3TJSY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"labels_warning__3FGrD\",\"buttonCancel\":\"labels_buttonCancel__1S3W1\",\"buttonDone\":\"labels_buttonDone__1ApdZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chat_container__14tFz\",\"blockLeft\":\"chat_blockLeft__3DcdR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"window_container__j9QA_\",\"window\":\"window_window__2Z0Ow\",\"newMessage\":\"window_newMessage__2nlXw\",\"messageList\":\"window_messageList__1Q4lt\",\"messageInfos\":\"window_messageInfos__1_6WM\",\"message\":\"window_message__1m09J\",\"messageOwner\":\"window_messageOwner__3--RG\",\"messageBody\":\"window_messageBody__2K7J-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logoff_container__3aTQ6\",\"username\":\"logoff_username__t699w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__2zjBj\",\"form\":\"login_form__2_2Ge\",\"label\":\"login_label__3rd20\",\"inputName\":\"login_inputName__1Fa_J\",\"input\":\"login_input__2F9pF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loading_container__1qrMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Warning_container__18O9h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"newroom_container__32UHt\",\"buttons\":\"newroom_buttons__2wspF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"enter_form__A8WpN\",\"label\":\"enter_label__1FvyZ\",\"inputName\":\"enter_inputName__3jwgx\",\"input\":\"enter_input__25nPH\",\"buttons\":\"enter_buttons__3sKnw\",\"buttonOpen\":\"enter_buttonOpen__Swegm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__1EPu7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageList\":\"Message_messageList__1qXvk\",\"messageInfos\":\"Message_messageInfos__wHPB4\",\"message\":\"Message_message__39klB\",\"messageOwner\":\"Message_messageOwner__FfaNP\",\"messageBody\":\"Message_messageBody__3g_pO\",\"postDate\":\"Message_postDate__3i1MH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"list_container__TWbm_\",\"roomName\":\"list_roomName__PQFcM\",\"lastMessage\":\"list_lastMessage__31FNT\",\"postDate\":\"list_postDate__2AWzd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewMessage_container__3-Wiw\",\"flex\":\"NewMessage_flex__2MGxh\",\"input\":\"NewMessage_input__1igAV\",\"button\":\"NewMessage_button__1QnQY\"};","import React from 'react';\r\nimport style from './list.module.scss';\r\n\r\nconst View = props => (\r\n  <div\r\n    className={style.container}\r\n    onClick={props.handleSelect.bind(this, props._id)}\r\n  >\r\n    <p className={style.roomName}>{props.name}</p>\r\n    <p className={style.lastMessage}>\r\n      {props.lastMessage && props.sender + ': ' + props.lastMessage}\r\n      <span className={style.postDate}>{props.postDate}</span>\r\n    </p>\r\n    \r\n  </div>\r\n);\r\n\r\nexport default View;\r\n","export default {\r\n  api: 'http://speech-restapi.herokuapp.com/api'\r\n}","import React, { createContext, useState, useEffect } from 'react'\r\nimport jwtDecode from 'jwt-decode';\r\nimport config from 'config';\r\n\r\nexport const ChatContext = createContext();\r\n\r\nconst ChatProvider = props => {\r\n\r\n  const token = localStorage.getItem('@speech/token');\r\n  const user = jwtDecode(token)\r\n  const [ rooms, setRooms ] = useState([]);\r\n  const [ selectedRoom, setSelectedRoom ] = useState(localStorage.getItem('@speech/room'));\r\n\r\n  const fetchRooms = async () => {\r\n    const data = await fetch(config.api + '/rooms/' + user._id, {\r\n      headers: {\r\n        authorization: token\r\n      }\r\n    });\r\n\r\n    const response = await data.json();\r\n    \r\n    if (rooms.length === 0) {\r\n      setRooms(response.rooms);\r\n    } else {\r\n    \r\n      for (let room of response.rooms) {\r\n\r\n      }\r\n    }\r\n    \r\n\r\n  }\r\n\r\n  const updateRoom = (roomId, body) => {\r\n    let copy = [...rooms];\r\n    for (let i in copy) {\r\n      if (copy[i]._id === roomId) {\r\n        copy[i].messages.push({\r\n          postDate: Date.now(),\r\n          _id: copy[i].messages.length + 1,\r\n          user: user,\r\n          body: body\r\n        })\r\n\r\n        setRooms(() => {\r\n          // let old = [...rooms];\r\n          // old.rooms = copy;\r\n          return copy;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  const selectRoom = roomId => {\r\n    localStorage.setItem('@speech/room', roomId);\r\n    setSelectedRoom(roomId);\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Obtain the rooms data from the API\r\n    fetchRooms();\r\n  }, []);\r\n\r\n  return (\r\n    <ChatContext.Provider value={ { user, rooms, token, updateRoom, selectedRoom, selectRoom } }>\r\n      { props.children }\r\n    </ChatContext.Provider>\r\n  );\r\n\r\n}\r\n\r\nexport default ChatProvider;","import React from 'react'\r\nimport input from './style/Input.module.scss';\r\nimport button from './style/Button.module.scss';\r\nimport layer from './style/Layer.module.scss';\r\nimport newMessage from './style/NewMessage.module.scss';\r\nimport message from './style/Message.module.scss';\r\nimport loading from './style/Loading.module.scss';\r\nimport warning from './style/Warning.module.scss';\r\n\r\nexport const Input = props => (\r\n  <div className={input.label}>\r\n    <p className={input.inputName}>{props.title}</p>\r\n    <input\r\n      style={{ \r\n        borderRadius: props.rounded && props.rounded,\r\n        width: props.width && props.width\r\n      }}\r\n      className={input.input}\r\n      type={props.type} \r\n      name={props.name} \r\n      onChange={props.onChange}\r\n      value={props.value}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport const Button = props => (\r\n  <p className={button.container}>\r\n    <button \r\n      onClick={props.onClick} \r\n      className={ props.cancel ? button.cancel : button.done }\r\n      style={{ \r\n        width: props.width && props.width,\r\n        borderRadius: props.rounded && props.rounded\r\n      }}\r\n    >\r\n      { props.title }\r\n    </button>\r\n  </p>\r\n);\r\n\r\nexport const Layer = props => (\r\n  <div className={layer.cover} style={{ display: !props.show && 'none' }}>\r\n    <div className={layer.content}>\r\n      <div className={layer.container} style={{ padding: props.pd && props.pd }}>\r\n        { props.children }\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport const NewMessage = props => (\r\n  <div className={newMessage.container}>\r\n    <div className={newMessage.flex}>\r\n      <input\r\n        className={newMessage.input}\r\n        type=\"text\"\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n      <button \r\n        className={newMessage.button}\r\n        onClick={props.onClick}\r\n      >OK</button>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport const Message = props => (\r\n  <li className={message.messageInfos} style={{\r\n    justifyContent: props.right && 'flex-end'\r\n  }} >\r\n    <div className={message.message}>\r\n      <a className={message.messageOwner}>{ props.username }</a>\r\n      <p className={message.messageBody}>{ props.body } <span className={message.postDate}>{props.postDate}</span></p>\r\n    </div>\r\n  </li>\r\n);\r\n\r\nexport const Loading = props => (\r\n  <div \r\n    className={loading.container}\r\n    style={{ \r\n      height: props.size && props.size,\r\n      width: props.use && props.use,\r\n      display: props.hide && 'none',\r\n      marginTop: props.top && props.top,\r\n      marginLeft: props.left && props.left,\r\n      marginRight: props.right && props.right,\r\n      marginBottom: props.bottom && props.bottom\r\n    }}\r\n  ></div>\r\n)\r\n\r\nexport const Warning = props => (\r\n  <div className={warning.container} style={{\r\n    marginTop: props.top && props.top\r\n  }}>\r\n    { props.children }\r\n  </div>\r\n)\r\n\r\n","export default date => {\r\n  let t = new Date(date);\r\n  t = t.getHours() + ':' + t.getMinutes();\r\n  return t;\r\n}","import React, { useContext } from \"react\";\r\nimport View from \"./list.view\";\r\nimport config from \"config\";\r\nimport { ChatContext } from \"contexts/ChatProvider\";\r\nimport { Loading } from \"components/Models\";\r\nimport dateParser from \"components/dateParser\";\r\n\r\nconst Controller = props => {\r\n  const { rooms, selectRoom, selectedRoom, user } = useContext(ChatContext);\r\n\r\n  const handleSelect = id => {\r\n    selectRoom(id);\r\n  };\r\n\r\n  return rooms.length ? (\r\n    rooms.map(room => {\r\n\r\n      let sender, lastMessage, postDate;\r\n\r\n      if (room.messages.length > 0) {\r\n        sender = room.messages[room.messages.length - 1].user.username;\r\n        lastMessage = room.messages[room.messages.length - 1].body;\r\n        postDate = room.messages[room.messages.length - 1].postDate;\r\n\r\n        if (lastMessage.length >= 30) {\r\n          lastMessage = lastMessage.slice(0, 30) + ' ...';\r\n        }\r\n\r\n        if (room.messages[room.messages.length - 1].user.username === user.username) {\r\n          sender = 'You';\r\n        }\r\n      }\r\n\r\n      console.log(room)\r\n\r\n      return (\r\n        <View\r\n          {...room}\r\n          key={room._id}\r\n          handleSelect={handleSelect}\r\n          username={user.username}\r\n          sender={sender}\r\n          lastMessage={lastMessage}\r\n          postDate={ postDate && dateParser(postDate) }\r\n        />\r\n      );\r\n    })\r\n  ) : (\r\n    <Loading />\r\n  );\r\n};\r\n\r\nexport default Controller;\r\n","import React from 'react';\r\nimport Controller from './list.controller';\r\n\r\nconst RoomList = props => <Controller />;\r\n\r\nexport default RoomList;","import React from 'react';\r\nimport { ChatContext } from 'contexts/ChatProvider';\r\nimport config from 'config';\r\nimport style from './window.module.scss';\r\nimport { Message, NewMessage, Warning } from 'components/Models';\r\nimport dateParser from 'components/dateParser';\r\n\r\nconst Controller = props => {\r\n\r\n  const [ message, setMessage ] = React.useState('');\r\n  const { rooms, token, fetchRooms, user, updateRoom, selectedRoom } = React.useContext(ChatContext);\r\n\r\n  var messages = [];\r\n\r\n  if (rooms.length) {\r\n    for (let i of rooms) {\r\n      if (i._id === selectedRoom) {\r\n        messages = i.messages;\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleNewMessage = e => {\r\n    setMessage(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = async e => {\r\n    if (message.length === 0) return;\r\n\r\n    updateRoom(selectedRoom, message);\r\n    setMessage('');\r\n\r\n    const send = await fetch(config.api + '/rooms/' + selectedRoom , {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        userId: user._id,\r\n        body: message\r\n      })\r\n    });\r\n\r\n    //if (send.status === 200) fetchRooms();\r\n  }\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.window}>\r\n        { messages.length ? messages.map(msg => (\r\n          <ul id=\"messagesList\">\r\n            <Message\r\n              key={msg._id}\r\n              username={ msg.user.username !== user.username && msg.user.username }\r\n              right={ msg.user.username === user.username && true }\r\n              body={msg.body}\r\n              postDate={dateParser(msg.postDate)}\r\n            />\r\n          </ul>\r\n        )) : (\r\n          <Warning top=\"25%\">This room does not have messages yet, be the first sanding one now!</Warning>\r\n        )}\r\n      <NewMessage \r\n        onChange={handleNewMessage}\r\n        onClick={handleSubmit}\r\n        value={message}\r\n      />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Controller;","import React from 'react';\r\nimport Controller from './window.controller';\r\n\r\nconst RoomWindow = props => <Controller />;\r\n\r\nexport default RoomWindow;","import React from 'react';\r\nimport { Button } from 'components/Models';\r\nimport style from './logoff.module.scss';\r\n\r\nconst View = props => {\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <p className={style.username}>{props.username}</p>\r\n      <Button cancel width=\"90%\" title=\"Log out\" onClick={props.handleButton} />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default View;","import React from 'react';\r\nimport View from './logoff.view';\r\nimport { ChatContext } from 'contexts/ChatProvider';\r\n\r\nconst Controller = props => {\r\n\r\n  const { user } = React.useContext(ChatContext);\r\n\r\n  const handleButton = e => {\r\n    e.preventDefault();\r\n\r\n    localStorage.setItem('@speech/token', false);\r\n  }\r\n\r\n  return (\r\n    <View \r\n      handleButton={handleButton}\r\n      username={user.username}\r\n    />\r\n  );\r\n  \r\n}\r\n\r\nexport default Controller;","import React from 'react';\r\nimport Controller from './logoff.controller';\r\n\r\nconst Logoff = props => <Controller { ...props } />;\r\n\r\nexport default Logoff;","import React from 'react';\r\nimport style from './newroom.module.scss';\r\nimport { Layer, Button, Input } from 'components/Models';\r\n\r\nconst View = props => (\r\n  <div>\r\n    <Button title=\"Create room\" onClick={props.handleLayer} />\r\n    <Layer show={props.layer}>\r\n      <p>{props.layer} </p>\r\n      <Input\r\n        title=\"Room name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={props.roomName}\r\n        onChange={props.handleChanges}\r\n      />\r\n      <div className={style.buttons}>\r\n        <Button cancel title=\"Cancel\" onClick={props.handleLayer} />\r\n        <Button title=\"Create\" onClick={props.handleSubmit} />\r\n      </div>\r\n    </Layer>\r\n  </div>\r\n);\r\n\r\nexport default View;","import React from 'react';\r\nimport View from './newroom.view';\r\nimport config from 'config';\r\nimport jwt from 'jwt-decode';\r\nimport { ChatContext } from 'contexts/ChatProvider';\r\n\r\nconst Controller = props => {\r\n\r\n  const [ layer, setLayer ] = React.useState(false);\r\n  const [ roomName, setRoomName ] = React.useState('');\r\n  const { user, fetchRooms } = React.useContext(ChatContext);\r\n\r\n  const handleChanges = e => {\r\n    setRoomName(e.target.value);\r\n  }\r\n\r\n  const handleLayer = e => {\r\n    setLayer(layer ? false : true);\r\n  }\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    const create = await fetch(config.api + '/rooms', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: localStorage.getItem('@speech/token')\r\n      },\r\n      body: JSON.stringify({\r\n        name: roomName,\r\n        userId: user._id\r\n      })\r\n    })\r\n\r\n    if (create.status === 200) {\r\n      fetchRooms();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View\r\n      roomName={roomName}\r\n      handleChanges={handleChanges}\r\n      handleSubmit={handleSubmit}\r\n      handleLayer={handleLayer}\r\n      layer={layer}\r\n    />\r\n  );\r\n\r\n};\r\n\r\nexport default Controller;","import React from 'react';\r\nimport Controller from './newroom.controller';\r\n\r\nconst NewRoom = props => <Controller />;\r\n\r\nexport default NewRoom;","import React from 'react'\r\nimport style from './enter.module.scss';\r\nimport labels from 'components/scss_modules/labels.module.scss';\r\nimport { Input, Button, Layer } from 'components/Models';\r\n\r\nconst View = props => (\r\n  <div>\r\n    <Button title=\"Enter room\" onClick={props.handleLayer} />\r\n    <Layer show={props.layer}>\r\n      {/* <div className={style.form} > */}\r\n        <Input\r\n          type=\"text\"\r\n          name=\"roomId\"\r\n          title=\"Room ID\"\r\n          onChange={props.handleChanges}\r\n        />\r\n        <div className={style.buttons}>\r\n          <Button cancel title=\"Cancel\" onClick={props.handleLayer} />\r\n          <Button title=\"Enter\" onClick={props.handleSubmit} />\r\n        </div>\r\n      {/* </div> */}\r\n    </Layer>\r\n  </div>\r\n);\r\n\r\nexport default View;\r\n","import React from 'react'\r\nimport View from './enter.view';\r\n\r\nconst Controller = props => {\r\n\r\n  const [ layer, setLayer ] = React.useState(false);\r\n  const [ roomId, setRoomId ] = React.useState('');\r\n\r\n  const handleLayer = e => {\r\n    setLayer(layer ? false : true);\r\n  }\r\n\r\n  const handleChanges = e => {\r\n    setRoomId(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    alert('entrando na sala id ', roomId);\r\n  }\r\n\r\n  return (\r\n    <View \r\n      layer={layer} \r\n      handleLayer={handleLayer}\r\n      handleChanges={handleChanges}\r\n      handleSubmit={handleSubmit}\r\n    />\r\n  );\r\n\r\n}\r\n\r\nexport default Controller;","import React from 'react'\r\nimport Controller from './enter.controller';\r\n\r\nconst EnterRoom = props => <Controller />\r\n\r\nexport default EnterRoom;","import React from 'react';\r\nimport style from './chat.module.scss';\r\nimport RoomList from './components/RoomList';\r\nimport RoomWindow from './components/RoomWindow';\r\nimport Logoff from './components/Logoff';\r\nimport NewRoom from './components/NewRoom';\r\nimport EnterRoom from './components/EnterRoom';\r\n\r\nconst View = props => (\r\n  <div className={style.container}>\r\n    <div className={style.blockLeft}>\r\n      <Logoff />\r\n      <EnterRoom />\r\n      <NewRoom />\r\n      <RoomList />\r\n    </div>\r\n    <RoomWindow />\r\n  </div>\r\n)\r\n\r\nexport default View;","import React from 'react';\r\nimport style from './login.module.scss';\r\nimport labels from 'components/scss_modules/labels.module.scss';\r\nimport { Input, Button } from 'components/Models';\r\n\r\nconst View = props => {\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <p \r\n        className={labels.warning} \r\n        style={ { display: props.message ? 'block' : 'none' } }>\r\n        { props.message }\r\n      </p>\r\n      <form className={style.form} onSubmit={props.handleSubmit}>\r\n        <Input\r\n          title=\"Username\"\r\n          type=\"text\"\r\n          name=\"username\"\r\n          onChange={props.handleChanges}\r\n          value={props.changes.username}\r\n        />\r\n        <Input\r\n          title=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={props.handleChanges}\r\n          value={props.changes.password}\r\n        />\r\n        <Button title=\"Login\" width=\"80%\" />\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default View;","import React from 'react';\r\nimport View from './login.view';\r\nimport config from 'config.js';\r\n\r\nconst Controller = props => {\r\n\r\n  const [changes, setChanges] = React.useState({username: '', password: ''});\r\n  const [message, setMessage] = React.useState('');\r\n\r\n  const handleChanges = e => {\r\n    const { name, value } = e.target;\r\n\r\n    // Cancel if the value not pre-exist\r\n    if (typeof changes[name] === 'undefined') return;\r\n\r\n    setChanges({\r\n      ...changes,\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    const login = await fetch(config.api + '/users/login', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify(changes)\r\n    });\r\n\r\n    const { status } = login;\r\n    const { message, token } = await login.json()\r\n\r\n    if (status === 401) {\r\n      // Wrong credentials\r\n      setMessage(message);\r\n      setChanges({username: '', password: ''});\r\n    } else if (status === 200) {\r\n      // Logged successfully\r\n      localStorage.setItem('@speech/token', token);\r\n      props.show(false);\r\n    }\r\n  }\r\n\r\n  return (  \r\n    <View \r\n      changes={changes}\r\n      handleChanges={handleChanges}\r\n      handleSubmit={handleSubmit}\r\n      message={message}\r\n    />\r\n  );\r\n\r\n}\r\n\r\nexport default Controller;","import React from 'react';\r\nimport Controller from './login.controller';\r\n\r\nconst Login = props => <Controller { ...props } />;\r\n\r\nexport default Login;","const hashRoute = () => {\r\n\r\n  var url = window.location.hash;\r\n\r\n  if (url.length <= 1) return false;\r\n\r\n  if (url.includes('=')) {\r\n    \r\n    url = url.substr(1, url.length);\r\n\r\n    let parts = url.split('=');\r\n\r\n    return {\r\n      [parts[0]]: parts[1]\r\n    }\r\n  }\r\n\r\n  return false;\r\n\r\n};\r\n\r\nexport default hashRoute;","import React from 'react';\r\nimport View from './chat.view';\r\nimport Login from './components/Login';\r\nimport isTokenValid from 'components/isTokenValid';\r\nimport ChatProvider from 'contexts/ChatProvider';\r\nimport hashRoute from 'components/hashRoute';\r\nimport config from 'config';\r\nimport JwtDecode from 'jwt-decode';\r\n\r\nconst Controller = props => {\r\n\r\n  const [ showLogin, setShowLogin ] = React.useState(true);\r\n  const token = localStorage.getItem('@speech/token');\r\n\r\n  const route = hashRoute();\r\n\r\n  const invitedToRoom = async () => {\r\n    const enter = await fetch(config.api + '/rooms/e/' + route.room, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token\r\n      },\r\n      body: JSON.stringify({\r\n        userId: JwtDecode(token)._id\r\n      })\r\n    });\r\n    \r\n    console.log(window.location.host)\r\n\r\n    if (enter.status === 200) {\r\n      localStorage.setItem('@speech/room', route.room);\r\n      window.location.replace('http://localhost:3000');\r\n    }\r\n    \r\n  }\r\n\r\n  React.useEffect(() => {\r\n    // Verify if the token exists\r\n    if (!token) {\r\n      setShowLogin(true);\r\n    } else {\r\n      // If exists, verify if is valid\r\n      isTokenValid()\r\n        .then(r => {\r\n          if (!r) {\r\n            localStorage.removeItem('@speech/token');\r\n            setShowLogin(true);\r\n          } else {\r\n            setShowLogin(false);\r\n          }\r\n        })\r\n    }\r\n  }, []);\r\n\r\n  if (route.room) {\r\n    invitedToRoom();\r\n    return <div/>;\r\n  }\r\n  \r\n  if (showLogin) return <Login show={setShowLogin} />\r\n\r\n  return (\r\n    <ChatProvider>\r\n      <View />\r\n    </ChatProvider>\r\n  );\r\n\r\n};\r\n\r\nexport default Controller;","import config from 'config';\r\n\r\nexport default async () => {\r\n  const token = localStorage.getItem('@speech/token');\r\n\r\n  if (token.length < 10) return false;\r\n\r\n  const valide = await fetch(config.api + '/users/validation', {\r\n    headers: {\r\n      authorization: token\r\n    }\r\n  })\r\n\r\n  const status = valide.status;\r\n  return status === 401 ? false : true;\r\n}","import React from 'react';\r\nimport Controller from 'components/Chat/chat.controller';\r\n\r\nconst Chat = () => <Controller />;\r\n\r\nexport default Chat;","import React from 'react';\r\nimport socket from 'socket.io-client';\r\nimport Chat from 'components/Chat';\r\nimport style from 'app.module.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={style.container}>\r\n      <Chat />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'App';\r\nimport 'index.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}