{"version":3,"sources":["components/Chat/components/Logoff/logoff.module.scss","components/Models/style/NewMessage.module.scss","components/Chat/components/NewRoom/newroom.module.scss","components/Chat/chat.module.scss","components/Models/style/Input.module.scss","components/Models/style/Button.module.scss","components/Models/style/Layer.module.scss","components/Models/style/Loading.module.scss","components/Models/style/Warning.module.scss","components/scss_modules/labels.module.scss","components/Chat/components/Register/register.module.scss","app.module.scss","components/Chat/components/RoomList/list.module.scss","components/Models/style/Message.module.scss","components/Chat/components/Login/login.module.scss","components/Chat/components/RoomWindow/window.module.scss","components/hashRoute.js","config.js","contexts/ChatProvider.js","components/scrollDown.js","components/Chat/components/Logoff/logoff.controller.js","components/Chat/components/Logoff/index.js","components/Models/models.view.js","components/Chat/components/NewRoom/newroom.view.js","components/Chat/components/NewRoom/newroom.controller.js","components/Chat/components/NewRoom/index.js","components/Chat/components/RoomList/list.view.js","components/dateParser.js","components/Chat/components/RoomList/list.controller.js","components/Chat/components/RoomList/index.js","components/Chat/components/RoomWindow/window.controller.js","components/Chat/components/RoomWindow/index.js","components/Chat/chat.view.js","components/Chat/components/Login/login.view.js","components/Chat/components/Login/login.controller.js","components/Chat/components/Login/index.js","components/Chat/components/Register/register.js","components/Chat/chat.controller.js","components/isTokenValid.js","components/Chat/index.js","App.js","index.js"],"names":["module","exports","hashRoute","url","window","location","hash","length","includes","parts","substr","split","io","socket","config","ChatContext","createContext","ChatProvider","props","token","localStorage","getItem","useState","roomList","setRoomList","roomData","setRoomData","isLoading","selectedRoom","setSelectedRoom","user","setUser","JwtDecode","err","selectRoom","roomId","setItem","emit","useEffect","_id","on","docs","console","log","list","ordered","sort","a","b","messages","Date","postDate","msg","data","oldData","i","push","fetchNewMessage","off","find","fetchNewRoomData","oldList","el","doc","document","querySelector","scrollTo","scrollHeight","scrollDown","Provider","value","sendNewMessage","body","now","userId","children","Controller","useContext","options","setOptions","className","style","container","size","face","username","onClick","e","preventDefault","reload","Logoff","Input","input","label","inputName","title","borderRadius","rounded","width","type","name","onChange","Button","button","cancel","done","Layer","layer","cover","display","show","content","padding","pd","NewMessage","newMessage","flex","Message","message","messageInfos","justifyContent","right","messageOwner","messageBody","Loading","loading","height","use","hide","marginTop","top","marginLeft","left","marginRight","marginBottom","bottom","Warning","warning","View","createButton","handleLayer","addTitle","invite","roomInvite","href","roomName","handleChanges","buttons","handleSubmit","setLayer","setRoomName","setInvite","fetchRooms","target","async","fetch","method","headers","authorization","JSON","stringify","create","json","response","status","NewRoom","handleSelect","bind","backgroundColor","isSelected","lastMessage","sender","date","t","getHours","getMinutes","id","map","room","last","slice","key","dateParser","RoomList","setMessage","color","closeInvite","messageList","RoomWindow","blockLeft","labels","changes","password","replace","React","setChanges","login","Login","Register","error","setError","showLogin","setShowLogin","route","valide","isTokenValid","then","r","removeItem","register","Chat","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e3703c42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"logoff_container__1DvQi\",\"username\":\"logoff_username__jvDwP\",\"face\":\"logoff_face__3s3H-\",\"options\":\"logoff_options__uVueO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NewMessage_container__3DJIL\",\"flex\":\"NewMessage_flex__1o2b8\",\"input\":\"NewMessage_input__2M8sI\",\"button\":\"NewMessage_button__WXHp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"newroom_container__381t8\",\"buttons\":\"newroom_buttons__1kp4_\",\"roomInvite\":\"newroom_roomInvite__32TDV\",\"createButton\":\"newroom_createButton__3smSE\",\"addTitle\":\"newroom_addTitle__1oqt-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chat_container__3VIF0\",\"blockLeft\":\"chat_blockLeft__2e7Wi\",\"roomList\":\"chat_roomList__3uDZx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Input_label__3Vzt_\",\"inputName\":\"Input_inputName__120sR\",\"input\":\"Input_input__35tC6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Button_container__2XQtU\",\"done\":\"Button_done__3Gjv6\",\"cancel\":\"Button_cancel__18Hfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"Layer_cover__2vWRI\",\"content\":\"Layer_content__XCL0p\",\"container\":\"Layer_container__3dVT9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Loading_container__1GWhn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Warning_container__297av\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"labels_warning__fI7yB\",\"buttonCancel\":\"labels_buttonCancel__2zuYs\",\"buttonDone\":\"labels_buttonDone__3h8Tx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"register_error__F0yT4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2Ym5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"list_container__2Z9xm\",\"roomName\":\"list_roomName__2SO5q\",\"lastMessage\":\"list_lastMessage__fD8I0\",\"postDate\":\"list_postDate__FdLYd\",\"roomList\":\"list_roomList__1Z8Mu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messageList\":\"Message_messageList__1LeUL\",\"messageInfos\":\"Message_messageInfos__1i5bs\",\"message\":\"Message_message__vzC4T\",\"messageOwner\":\"Message_messageOwner__24rZr\",\"messageBody\":\"Message_messageBody__1vxAB\",\"postDate\":\"Message_postDate__2e6bE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__I3WY5\",\"form\":\"login_form__1Aw7y\",\"label\":\"login_label__1x7WU\",\"inputName\":\"login_inputName__1w1vG\",\"input\":\"login_input__1QTob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"window_container__1d7n6\",\"window\":\"window_window__1B63q\",\"newMessage\":\"window_newMessage__3YLm1\",\"messageList\":\"window_messageList__1Akky\",\"messageInfos\":\"window_messageInfos__3R1H6\",\"message\":\"window_message__1iSYl\",\"messageOwner\":\"window_messageOwner__3_gW4\",\"messageBody\":\"window_messageBody__S16EY\",\"invite\":\"window_invite__2wYw0\",\"closeInvite\":\"window_closeInvite__3gmGM\"};","const hashRoute = () => {\r\n\r\n  var url = window.location.hash;\r\n\r\n  if (url.length <= 1) return false;\r\n\r\n  if (url.includes('=')) {\r\n    \r\n    url = url.substr(1, url.length);\r\n\r\n    let parts = url.split('=');\r\n\r\n    return {\r\n      [parts[0]]: parts[1]\r\n    }\r\n  } else {\r\n    url = url.substr(1, url.length);\r\n    \r\n    return {\r\n      [url]: true\r\n    }\r\n  }\r\n\r\n  return false;\r\n\r\n};\r\n\r\nexport default hashRoute;","export default {\r\n  api: 'http://172.21.102.243:5000/api',\r\n  socket: 'http://172.21.102.243:5000'\r\n}","import { scrollDown } from 'components/scrollDown';\r\nimport config from 'config';\r\nimport JwtDecode from 'jwt-decode';\r\nimport React, { createContext, useEffect, useState } from 'react';\r\nimport socket from 'socket.io-client';\r\n\r\nconst io = socket(config.socket);\r\n\r\nexport const ChatContext = createContext();\r\n\r\nconst ChatProvider = props => {\r\n\r\n  const token = localStorage.getItem('@speech/token');\r\n  const [ roomList, setRoomList ] = useState(false);\r\n  const [ roomData, setRoomData ] = useState([]);\r\n  const [ isLoading, setIsLoading ] = useState(true);\r\n  const [ selectedRoom, setSelectedRoom ] = useState(localStorage.getItem('@speech/room'));\r\n  const [ user, setUser ] = useState('');\r\n\r\n  try {\r\n    setUser(JwtDecode(token));\r\n  } catch(err) {}\r\n\r\n  const fetchNewRoomData = data => {\r\n    let oldData = [ ...roomData ];\r\n    let find = false;\r\n    if (roomData.length != 0) {\r\n      for (let i of oldData) {\r\n        if (i._id === data[0]._id) {\r\n          find = true;\r\n        }\r\n      }\r\n      if (!find) {\r\n        oldData.push(data[0]);\r\n        setRoomData(oldData);\r\n      }\r\n    } else {\r\n      setRoomData(data);\r\n    }\r\n  }\r\n\r\n  const sendNewMessage = (roomId, body) => {\r\n    let oldData = [ ...roomData ];\r\n    for (let i in oldData) {\r\n      if (oldData[i]._id === roomId) {\r\n        oldData[i].messages.push({\r\n          _id: roomId + oldData[i].messages.length + 1,\r\n          postDate: Date.now(),\r\n          body: body,\r\n          user: user\r\n        })\r\n      }\r\n    }\r\n\r\n    setRoomData(oldData);\r\n\r\n    io.emit('newMessage', {\r\n      userId: user._id,\r\n      roomId: roomId,\r\n      body: body\r\n    })\r\n  }\r\n\r\n  const selectRoom = roomId => {\r\n    localStorage.setItem('@speech/room', roomId);\r\n    setSelectedRoom(roomId);\r\n    io.emit('selectedRoom', roomId);\r\n  }\r\n\r\n  const fetchNewMessage = data => {\r\n    let oldData = [ ...roomData ];\r\n    for (let i in oldData) {\r\n      if (oldData[i]._id === data._id) {\r\n        oldData[i].messages.push(data.messages[0]);\r\n      }\r\n    }\r\n    setRoomData(oldData);\r\n  }\r\n\r\n  const orderByDate = list => {\r\n    list = list.sort((a, b) => {\r\n      if (a.messages.length < 1 || b.messages.length < 1) {\r\n        return 0;\r\n      }\r\n      return new Date(a.messages[0].postDate) - new Date(b.messages[0].postDate)\r\n    });\r\n    console.log(list);\r\n    return list;\r\n  }\r\n\r\n  useEffect(() => {\r\n    selectRoom(selectedRoom);\r\n\r\n    io.emit('userId', user._id);\r\n\r\n    io.on('roomList', docs => {\r\n      console.log('receiving new roomList')\r\n      let ordered = orderByDate(docs);\r\n      setRoomList(ordered);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    io.on('newMessage', msg => {\r\n      console.log('receiving new message');\r\n      fetchNewMessage(msg)\r\n    });\r\n\r\n    return () => io.off('newMessage');\r\n  })\r\n\r\n  useEffect(() => {\r\n    io.on('roomData', docs => fetchNewRoomData(docs))\r\n\r\n    // Clean up\r\n    return () => io.off('roomData');\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!roomList) return;\r\n    if (roomData.length < 1) return;\r\n\r\n    let oldList = [ ...roomList ];\r\n    for (let i in oldList) {\r\n      for (let b in roomData) {\r\n        if (roomData[b]._id === oldList[i]._id) {\r\n          if (roomData[b].messages.length > 0 && oldList[i].messages.length > 0) {\r\n            if (roomData[b].messages[roomData[b].messages.length - 1]._id !== oldList[i].messages[oldList[i].messages.length - 1]._id) {\r\n              oldList[i].messages.push(roomData[b].messages[roomData[b].messages.length - 1]);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setRoomList(oldList);\r\n  }, [roomData]);\r\n\r\n  useEffect(() => {\r\n    scrollDown('#messages');\r\n  });\r\n\r\n  return (\r\n    <ChatContext.Provider value={{\r\n      roomList,\r\n      roomData,\r\n      user, \r\n      token,  \r\n      selectedRoom, \r\n      selectRoom, \r\n      isLoading, \r\n      sendNewMessage \r\n    }}>\r\n      { props.children }\r\n    </ChatContext.Provider>\r\n  );\r\n\r\n}\r\n\r\nexport default ChatProvider;","export const scrollDown = el => {\r\n  let doc = document.querySelector(el);\r\n  doc.scrollTo(0, doc.scrollHeight);\r\n}","import { ChatContext } from 'contexts/ChatProvider';\r\nimport React, { useContext, useState } from 'react';\r\nimport { MdFace } from 'react-icons/md';\r\nimport style from './logoff.module.scss';\r\n\r\nconst Controller = props => {\r\n\r\n  const { user } = useContext(ChatContext);\r\n  const [ options, setOptions ] = useState(false);\r\n\r\n  const handleExit = e => {\r\n    e.preventDefault();\r\n\r\n    localStorage.setItem('@speech/token', false);\r\n    window.location.reload();\r\n  }\r\n\r\n  return (\r\n    <div className={style.container}>\r\n      <MdFace size=\"40px\" className={style.face} />\r\n      <p \r\n        className={style.username} \r\n        onClick={() => setOptions(options ? false : true)}>\r\n          {user.username}\r\n      </p>\r\n      {options && (\r\n        <div className={style.options}>\r\n          <p onClick={handleExit}>Logout</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default Controller;","import React from 'react';\r\nimport Controller from './logoff.controller';\r\n\r\nconst Logoff = props => <Controller { ...props } />;\r\n\r\nexport default Logoff;","import React from 'react'\r\nimport input from './style/Input.module.scss';\r\nimport button from './style/Button.module.scss';\r\nimport layer from './style/Layer.module.scss';\r\nimport newMessage from './style/NewMessage.module.scss';\r\nimport message from './style/Message.module.scss';\r\nimport loading from './style/Loading.module.scss';\r\nimport warning from './style/Warning.module.scss';\r\n\r\nexport const Input = props => (\r\n  <div className={input.label}>\r\n    <p className={input.inputName}>{props.title}</p>\r\n    <input\r\n      style={{ \r\n        borderRadius: props.rounded && props.rounded,\r\n        width: props.width && props.width\r\n      }}\r\n      className={input.input}\r\n      type={props.type} \r\n      name={props.name} \r\n      onChange={props.onChange}\r\n      value={props.value}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport const Button = props => (\r\n  <p className={button.container}>\r\n    <button \r\n      onClick={props.onClick} \r\n      className={ props.cancel ? button.cancel : button.done }\r\n      style={{ \r\n        width: props.width && props.width,\r\n        borderRadius: props.rounded && props.rounded\r\n      }}\r\n    >\r\n      { props.title }\r\n    </button>\r\n  </p>\r\n);\r\n\r\nexport const Layer = props => (\r\n  <div className={layer.cover} style={{ display: !props.show && 'none' }}>\r\n    <div className={layer.content}>\r\n      <div className={layer.container} style={{ padding: props.pd && props.pd }}>\r\n        { props.children }\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport const NewMessage = props => (\r\n  <div className={newMessage.container}>\r\n    <div className={newMessage.flex}>\r\n      <input\r\n        className={newMessage.input}\r\n        type=\"text\"\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n      <button \r\n        className={newMessage.button}\r\n        onClick={props.onClick}\r\n      >OK</button>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport const Message = props => (\r\n  <li className={message.messageInfos} style={{\r\n    justifyContent: props.right && 'flex-end'\r\n  }} >\r\n    <div className={message.message}>\r\n      <a className={message.messageOwner}>{ props.username }</a>\r\n      <p className={message.messageBody}>{ props.body } <span className={message.postDate}>{props.postDate}</span></p>\r\n    </div>\r\n  </li>\r\n);\r\n\r\nexport const Loading = props => (\r\n  <div \r\n    className={loading.container}\r\n    style={{ \r\n      height: props.size && props.size,\r\n      width: props.use && props.use,\r\n      display: props.hide && 'none',\r\n      marginTop: props.top && props.top,\r\n      marginLeft: props.left && props.left,\r\n      marginRight: props.right && props.right,\r\n      marginBottom: props.bottom && props.bottom\r\n    }}\r\n  ></div>\r\n)\r\n\r\nexport const Warning = props => (\r\n  <div className={warning.container} style={{\r\n    marginTop: props.top && props.top\r\n  }}>\r\n    { props.children }\r\n  </div>\r\n)\r\n\r\n","import { Button, Input, Layer } from 'components/Models';\r\nimport React from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport style from './newroom.module.scss';\r\n\r\nconst View = props => (\r\n  <div>\r\n    {/* <Button title=\"Create room\" onClick={props.handleLayer} /> */}\r\n    <div className={style.createButton} onClick={props.handleLayer}>\r\n      <MdAdd size=\"40px\" /> <span className={style.addTitle}>New Room</span>\r\n    </div>\r\n    <Layer show={props.layer}>\r\n      <h2>{props.invite && 'Room created!'}</h2>\r\n      { props.invite && <p className={style.roomInvite}>Send your room invitation to other people: <a href={props.invite}>{ props.invite }</a></p> }\r\n      <Input\r\n        title=\"Room name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={props.roomName}\r\n        onChange={props.handleChanges}\r\n      />\r\n      <div className={style.buttons}>\r\n        <Button cancel title=\"Cancel\" onClick={props.handleLayer} />\r\n        <Button title=\"Create\" onClick={props.handleSubmit} />\r\n      </div>\r\n    </Layer>\r\n  </div>\r\n);\r\n\r\nexport default View;","import config from 'config';\r\nimport { ChatContext } from 'contexts/ChatProvider';\r\nimport React, { useContext, useState } from 'react';\r\nimport View from './newroom.view';\r\n\r\nconst Controller = props => {\r\n\r\n  const [ layer, setLayer ] = useState(false);\r\n  const [ roomName, setRoomName ] = useState('');\r\n  const [ invite, setInvite ] = useState('');\r\n  const { user, fetchRooms } = useContext(ChatContext);\r\n\r\n  const handleChanges = e => {\r\n    setRoomName(e.target.value);\r\n  }\r\n\r\n  const handleLayer = e => {\r\n    setLayer(layer ? false : true);\r\n  }\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    if (roomName.length < 3) return;\r\n\r\n    const create = await fetch(config.api + '/rooms', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: localStorage.getItem('@speech/token')\r\n      },\r\n      body: JSON.stringify({\r\n        name: roomName,\r\n        userId: user._id\r\n      })\r\n    })\r\n\r\n    const response = await create.json();\r\n\r\n    if (response) {\r\n      setInvite('http://localhost:3000/#room=' + response._id);\r\n    }\r\n\r\n    if (create.status === 200) {\r\n      setRoomName('');\r\n      fetchRooms();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View\r\n      roomName={roomName}\r\n      handleChanges={handleChanges}\r\n      handleSubmit={handleSubmit}\r\n      handleLayer={handleLayer}\r\n      layer={layer}\r\n      invite={invite}\r\n    />\r\n  );\r\n\r\n};\r\n\r\nexport default Controller;","import React from 'react';\r\nimport Controller from './newroom.controller';\r\n\r\nconst NewRoom = props => <Controller />;\r\n\r\nexport default NewRoom;","import React from 'react';\r\nimport style from './list.module.scss';\r\n\r\nconst View = props => (\r\n  <div\r\n    className={style.container}\r\n    onClick={props.handleSelect.bind(this, props._id)}\r\n    style={{\r\n      backgroundColor: props.isSelected && '#adc6e840'\r\n    }}\r\n  >\r\n    <p className={style.roomName}>{props.name}</p>\r\n    <p className={style.lastMessage}>\r\n      {props.lastMessage && props.sender + ': ' + props.lastMessage}\r\n      <span className={style.postDate}>{props.postDate}</span>\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default View;\r\n","export default date => {\r\n  let t = new Date(date);\r\n  t = t.getHours() + ':' + t.getMinutes();\r\n  return t;\r\n}","import React, { useContext } from \"react\";\r\nimport View from \"./list.view\";\r\nimport config from \"config\";\r\nimport { ChatContext } from \"contexts/ChatProvider\";\r\nimport { Loading } from \"components/Models\";\r\nimport dateParser from \"components/dateParser\";\r\nimport style from './list.module.scss';\r\n\r\nconst Controller = props => {\r\n  const { selectRoom, selectedRoom, user, isLoading, roomList } = useContext(ChatContext);\r\n\r\n  const handleSelect = id => {\r\n    selectRoom(id);\r\n  };\r\n\r\n  return (roomList.length) ? (\r\n    roomList.map(room => {\r\n\r\n      let sender, lastMessage, postDate, isSelected;\r\n   \r\n      if (room.messages.length > 0) {\r\n        let last = room.messages[room.messages.length - 1];\r\n        sender = last.user.username;\r\n        lastMessage = last.body;\r\n        postDate = last.postDate;\r\n\r\n        if (sender === user.username) {\r\n          sender = 'You';\r\n        }\r\n\r\n        if (lastMessage.length > 10) {\r\n          lastMessage = lastMessage.slice(0, 11) + ' ...';\r\n        }\r\n      }\r\n\r\n      return (\r\n        <View\r\n          {...room}\r\n          key={room._id}\r\n          handleSelect={handleSelect}\r\n          isSelected={isSelected}\r\n          username={user.username}\r\n          sender={sender}\r\n          lastMessage={lastMessage}\r\n          postDate={ postDate && dateParser(postDate) }\r\n        />\r\n      );\r\n    })\r\n  ) : (\r\n    isLoading && <Loading />\r\n  );\r\n};\r\n\r\nexport default Controller;\r\n","import React from 'react';\r\nimport Controller from './list.controller';\r\n\r\nconst RoomList = props => <Controller />;\r\n\r\nexport default RoomList;","import dateParser from 'components/dateParser';\r\nimport { Message, NewMessage, Warning } from 'components/Models';\r\nimport { ChatContext } from 'contexts/ChatProvider';\r\nimport React, { useContext, useEffect, useState } from 'react';\r\nimport { MdClose } from 'react-icons/md';\r\nimport style from './window.module.scss';\r\n\r\nconst Controller = props => {\r\n\r\n  const [ message, setMessage ] = useState('');\r\n  const [ invite, setInvite ] = useState(true);\r\n  const { user, selectedRoom, isLoading, sendNewMessage, roomData } = useContext(ChatContext);\r\n\r\n  var messages = [];\r\n  \r\n  if (roomData.length) {\r\n    for (let i of roomData) {\r\n      if (i._id === selectedRoom) {\r\n        messages = i.messages;\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleNewMessage = e => {\r\n    setMessage(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = async e => {\r\n    if (message.length === 0) return;\r\n\r\n    sendNewMessage(selectedRoom, message);\r\n    setMessage('');\r\n  }\r\n\r\n  useEffect(() => {\r\n    setInvite(true);\r\n  }, [selectedRoom])\r\n  \r\n  return (\r\n    <div className={style.container}>\r\n      <div className={style.invite}>\r\n        { invite && (\r\n          <p>\r\n            Invite other people to this room: \r\n            <a href={window.location.href + '#room=' + selectedRoom}>\r\n              {window.location.href + '#room=' + selectedRoom}\r\n            </a>\r\n            <MdClose \r\n              color=\"red\" \r\n              size=\"20px\" \r\n              className={style.closeInvite}\r\n              onClick={() => setInvite(invite ? false : true)}\r\n            />\r\n          </p>\r\n        )}\r\n      </div>\r\n      <div className={style.window}>\r\n        <div>\r\n          <ul className={style.messageList} id=\"messages\">\r\n            { messages.length ? messages.map(msg => (\r\n              <Message\r\n                key={msg._id}\r\n                username={ msg.user.username !== user.username && msg.user.username }\r\n                right={ msg.user.username === user.username && true }\r\n                body={msg.body}\r\n                postDate={dateParser(msg.postDate)}\r\n              />\r\n            )) : (\r\n              !isLoading && (\r\n                <Warning top=\"25%\">\r\n                  This room does not have messages yet, be the first sanding one now!\r\n                </Warning>\r\n              )\r\n            )}\r\n          </ul>\r\n        </div>\r\n      <NewMessage \r\n        onChange={handleNewMessage}\r\n        onClick={handleSubmit}\r\n        value={message}\r\n      />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default Controller;","import React from 'react';\r\nimport Controller from './window.controller';\r\n\r\nconst RoomWindow = props => <Controller />;\r\n\r\nexport default RoomWindow;","import React from 'react';\r\nimport style from './chat.module.scss';\r\nimport Logoff from './components/Logoff';\r\nimport NewRoom from './components/NewRoom';\r\nimport RoomList from './components/RoomList';\r\nimport RoomWindow from './components/RoomWindow';\r\n\r\nconst View = props => (\r\n  <div className={style.container}>\r\n    <div className={style.blockLeft}>\r\n      <Logoff />\r\n      <NewRoom />\r\n      <div className={style.roomList}>\r\n        <RoomList />\r\n      </div>\r\n    </div>\r\n    <RoomWindow />\r\n  </div>\r\n)\r\n\r\nexport default View;","import React from 'react';\r\nimport style from './login.module.scss';\r\nimport labels from 'components/scss_modules/labels.module.scss';\r\nimport { Input, Button, Layer } from 'components/Models';\r\n\r\nconst View = props => {\r\n\r\n  return (\r\n    <Layer show>\r\n        <h2>Login in your account</h2>\r\n        <p \r\n          className={labels.warning} \r\n          style={ { display: props.message ? 'block' : 'none' } }>\r\n          { props.message }\r\n        </p>\r\n        <Input\r\n          title=\"Username\"\r\n          type=\"text\"\r\n          name=\"username\"\r\n          onChange={props.handleChanges}\r\n          value={props.changes.username}\r\n        />\r\n        <Input\r\n          title=\"Password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          onChange={props.handleChanges}\r\n          value={props.changes.password}\r\n        />\r\n        <Button title=\"Login\" width=\"80%\" onClick={props.handleSubmit} />\r\n        <a href=\"/#register\" onClick={() => {\r\n          window.location.replace('/#register')\r\n          window.location.reload();\r\n        }}>\r\n          Create an account\r\n        </a>\r\n    </Layer>\r\n  );\r\n\r\n}\r\n\r\nexport default View;","import React from 'react';\r\nimport View from './login.view';\r\nimport config from 'config.js';\r\n\r\nconst Controller = props => {\r\n\r\n  const [changes, setChanges] = React.useState({username: '', password: ''});\r\n  const [message, setMessage] = React.useState('');\r\n\r\n  const handleChanges = e => {\r\n    const { name, value } = e.target;\r\n\r\n    // Cancel if the value not pre-exist\r\n    if (typeof changes[name] === 'undefined') return;\r\n\r\n    setChanges({\r\n      ...changes,\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n\r\n    const login = await fetch(config.api + '/users/login', {\r\n      method: 'POST',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify(changes)\r\n    });\r\n\r\n    const { status } = login;\r\n    const { message, token } = await login.json()\r\n\r\n    if (status === 401) {\r\n      // Wrong credentials\r\n      setMessage(message);\r\n      setChanges({username: '', password: ''});\r\n    } else if (status === 200) {\r\n      // Logged successfully\r\n      localStorage.setItem('@speech/token', token);\r\n      props.show(false);\r\n    }\r\n  }\r\n\r\n  return (  \r\n    <View \r\n      changes={changes}\r\n      handleChanges={handleChanges}\r\n      handleSubmit={handleSubmit}\r\n      message={message}\r\n    />\r\n  );\r\n\r\n}\r\n\r\nexport default Controller;","import React from 'react';\r\nimport Controller from './login.controller';\r\n\r\nconst Login = props => <Controller { ...props } />;\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { Layer, Input, Button } from 'components/Models';\r\nimport style from './register.module.scss';\r\nimport config from 'config';\r\n\r\n\r\nconst Register = props => {\r\n\r\n  const [ changes, setChanges ] = useState({\r\n    username: '',\r\n    password: ''\r\n  });\r\n  const [ error, setError ] = useState('');\r\n\r\n  const handleChanges = e => {\r\n    const { name, value } = e.target;\r\n\r\n    setChanges({\r\n      ...changes,\r\n      [name]: value \r\n    });\r\n  }\r\n\r\n  const submit = async e => {\r\n    e.preventDefault();\r\n\r\n    if (changes.username?.length < 4 || changes.username?.length < 4) return;\r\n\r\n    const create = await fetch(config.api + '/users', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(changes)\r\n    })\r\n\r\n    const status = create.status;\r\n\r\n    if (status === 500 || status === 401) {\r\n      return setError('Username already in use');\r\n    }\r\n\r\n    window.location.replace('/');\r\n    \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Layer show>\r\n        <p className={style.error}>{error}</p>\r\n        <h2>Create your account</h2>\r\n        <Input \r\n          type=\"text\" \r\n          name=\"username\" \r\n          title=\"Username\" \r\n          onChange={handleChanges} \r\n          value={changes.username}  />\r\n        <Input \r\n          type=\"password\" \r\n          name=\"password\" \r\n          title=\"Password\" \r\n          onChange={handleChanges} \r\n          value={changes.password}  />\r\n        <Button title=\"Create\" onClick={submit} width=\"80%\" />\r\n        <a href=\"/\">Log in</a>\r\n      </Layer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Register;","import hashRoute from 'components/hashRoute';\r\nimport isTokenValid from 'components/isTokenValid';\r\nimport config from 'config';\r\nimport ChatProvider from 'contexts/ChatProvider';\r\nimport JwtDecode from 'jwt-decode';\r\nimport React, { useEffect } from 'react';\r\nimport View from './chat.view';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register/register';\r\n\r\nconst Controller = props => {\r\n\r\n  const [ showLogin, setShowLogin ] = React.useState(false);\r\n  const token = localStorage.getItem('@speech/token');\r\n\r\n  const route = hashRoute();\r\n\r\n  const invitedToRoom = async () => {\r\n    const enter = await fetch(config.api + '/rooms/e/' + route.room, {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token\r\n      },\r\n      body: JSON.stringify({\r\n        userId: JwtDecode(token)._id\r\n      })\r\n    });\r\n\r\n    if (enter.status === 200) {\r\n      localStorage.setItem('@speech/room', route.room);\r\n      window.location.replace('http://localhost:3000');\r\n    }\r\n    \r\n  }\r\n\r\n  useEffect(() => {\r\n    // Verify if the token exists\r\n    if (!token) {\r\n      setShowLogin(true);\r\n    } else {\r\n      // If exists, verify if is valid\r\n      isTokenValid()\r\n        .then(r => {\r\n          if (!r) {\r\n            localStorage.removeItem('@speech/token');\r\n            setShowLogin(true);\r\n          } else {\r\n            setShowLogin(false);\r\n          }\r\n        })\r\n    }\r\n  }, []);\r\n\r\n  if (route.room) {\r\n    invitedToRoom();\r\n    return <div/>;\r\n  }\r\n\r\n  if (route.register) {\r\n    return <Register />\r\n  }\r\n  \r\n  if (showLogin) return <Login show={setShowLogin} />\r\n\r\n  return (\r\n    <ChatProvider>\r\n      <View />\r\n    </ChatProvider>\r\n  );\r\n\r\n};\r\n\r\nexport default Controller;","import config from 'config';\r\n\r\nexport default async () => {\r\n  const token = localStorage.getItem('@speech/token');\r\n\r\n  if (token.length < 10) return false;\r\n\r\n  const valide = await fetch(config.api + '/users/validation', {\r\n    headers: {\r\n      authorization: token\r\n    }\r\n  })\r\n\r\n  const status = valide.status;\r\n  return status === 401 ? false : true;\r\n}","import React from 'react';\r\nimport Controller from 'components/Chat/chat.controller';\r\n\r\nconst Chat = () => <Controller />;\r\n\r\nexport default Chat;","import React from 'react';\r\nimport socket from 'socket.io-client';\r\nimport Chat from 'components/Chat';\r\nimport style from 'app.module.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className={style.container}>\r\n      <Chat />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'App';\r\nimport 'index.css';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}